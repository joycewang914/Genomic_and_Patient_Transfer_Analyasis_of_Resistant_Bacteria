vrefm = read.dna("2019-07-19_Filtered_Pathways_VREfm", format = "interleaved")
vrefc = read.dna("2019-07-19_Filtered_Pathways_VREfc", format = "interleaved")
ecol = read.dna("2019-07-19_Filtered_Pathways_CipREc", format = "interleaved")
path_mdro_clusters = list("MRSA" = mrsa, "VREfm" = vrefm, "VREfc" = vrefc, "CipREc" = ecol)
path_facils = as.character(1:6)
path_mdro_cluster_info = sapply(names(path_mdro_clusters), FUN = function(x){
t(sapply(rownames(path_mdro_clusters[[x]]), FUN = function(s){
info = strsplit(as.character(s), "-")[[1]];
id = info[1]
pt = info[2]
fac = substr(pt, 1, 1)
visit = info[3]
site = substr(info[4], 1, 1)
cbind(paste(id, pt, visit, site, sep = "-"), id, pt, visit, site, fac)
}))
})
path_mdro_cluster_info$MRSA
rm(list = ls())
# Plot Fig 1A showing the prevalence of antibiotic-resistant organisms (AROs) in regional nursing facilities due to endemic spread of epidemic lineages.
# load dna matrix data (MGE removed)
mrsa = read.dna("2019-07-19_Filtered_Pathways_MRSA", format = "interleaved")
vrefm = read.dna("2019-07-19_Filtered_Pathways_VREfm", format = "interleaved")
vrefc = read.dna("2019-07-19_Filtered_Pathways_VREfc", format = "interleaved")
ecol = read.dna("2019-07-19_Filtered_Pathways_CipREc", format = "interleaved")
path_aro_clusters = list("MRSA" = mrsa, "VREfm" = vrefm, "VREfc" = vrefc, "CipREc" = ecol)
path_facils = as.character(1:6)
path_aro_cluster_info = sapply(names(path_aro_clusters), FUN = function(x){
t(sapply(rownames(path_aro_clusters[[x]]), FUN = function(s){
info = strsplit(as.character(s), "-")[[1]];
id = info[1]
pt = info[2]
fac = substr(pt, 1, 1)
visit = info[3]
site = substr(info[4], 1, 1)
cbind(paste(id, pt, visit, site, sep = "-"), id, pt, visit, site, fac)
}))
})
sapply(path_aro_clusters, FUN = function(y){
pt = sapply(rownames(y), FUN = function(x){strsplit(x, "-")[[1]][2]})
fac = substr(pt, 1, 1)
table(fac)/table(path_baseline$facilID)
})
path_baseline = read.csv("/Users/joycewang/Desktop/Mody_NH_collections/Pathways/From Julia/Resident Baseline Characteristics.csv", sep = ",", quote = "")
tabel(path_baseline$facilID)
table(path_baseline$facilID)
total_enrol_pt_per_facil = structure(c(133, 82, 169, 137, 55, 76), names = 1:6)
total_enrol_pt_per_facil
aro_prev_by_fac = sapply(path_aro_clusters, FUN = function(y){
pt = sapply(rownames(y), FUN = function(x){strsplit(x, "-")[[1]][2]})
fac = substr(pt, 1, 1)
table(fac)/total_enrol_pt_per_facil
})
aro_prev_by_fac
library(ape)
library(wesanderson)
nh_cols = wes_palette(name = "Darjeeling1", length(path_facils))
nh_cols = wes_palette(name = "Darjeeling1", length(path_aro_clusters))
nh_cols
nh_cols[nh_cols %in% "#F2AD00"] = "lightgrey"
nh_cols
barplot(aro_prev_by_fac,
col = nh_cols,
border="white",
font.axis=1,
cex.lab = 2,
cex.axis = 2,
cex.names = 2,
beside= T,
xlab="Nursing Facility",
font.lab=1,
ylab = "Percentage of\ncolonized patients",
yaxt = "n",
ylim = c(0, 0.3))
axis(side = 2, font = 1, at = seq(0, .3, 0.15),
labels = seq(0, .3*100, 15), las = 2, cex.axis = 2, cex.lab = 2)
legend("top", legend = colnames(final_mdro_prev_by_fac),
fill = nh_cols, col = nh_cols, xpd = TRUE, inset = -0.2, text.font = 2,
cex = 2, bty = "n", horiz = TRUE, border = NA, text.width = 3, x.intersp = 0.25
)
barplot(t(aro_prev_by_fac),
col = nh_cols,
border="white",
font.axis=1,
cex.lab = 2,
cex.axis = 2,
cex.names = 2,
beside= T,
xlab="Nursing Facility",
font.lab=1,
ylab = "Percentage of\ncolonized patients",
yaxt = "n",
ylim = c(0, 0.3))
axis(side = 2, font = 1, at = seq(0, .3, 0.15),
labels = seq(0, .3*100, 15), las = 2, cex.axis = 2, cex.lab = 2)
legend("top", legend = colnames(aro_prev_by_fac),
fill = nh_cols, col = nh_cols, xpd = TRUE, inset = -0.2, text.font = 2,
cex = 2, bty = "n", horiz = TRUE, border = NA, text.width = 3, x.intersp = 0.25)
lapply(names(sessionInfo()$otherPkgs), function(pkgs)  detach(    paste0('package:', pkgs),    character.only = T,    unload = T,    force = T  ))
search()
facils_gt10 = names(which(table(path_baseline$hospcode[!path_baseline$hospcode %in% 31]) >= 10))
facils_gt10
db_path = read.csv("../../../../Mody_NH_collections/Pathways/Micro data_11-19-15.csv", sep = ",", quote = "")
db_path = db_path[!is.na(db_path$studyID), ]
total_db_path = read.csv("/Users/joycewang/Desktop/Mody_NH_collections/Pathways/Pathways Phase 2/Final Data files/Pathways_both phases final dataset.csv", header = T)
path_baseline = read.csv("../../../../Mody_NH_collections/Pathways/From Julia/Resident Baseline Characteristics.csv", sep = ",", quote = "")
path_baseline = path_baseline[!path_baseline$studyID %in% "5009",]
path_baseline = path_baseline[path_baseline$studyID %in% db_path$studyID,]
path_baseline$hospcode = sapply(as.character(path_baseline$studyID), FUN = function(x){
total_db_path[total_db_path$studyID %in% x & total_db_path$visit %in% "0", "hospcode"]
})
path_visits = read.csv("../../../../Mody_NH_collections/Pathways/From Julia/Visit Details.csv")
path_baseline = path_baseline[!path_baseline$studyID %in% "5009",]
path_baseline = path_baseline[path_baseline$studyID %in% db_path$studyID,]
path_baseline$hospcode = sapply(as.character(path_baseline$studyID), FUN = function(x){
total_db_path[total_db_path$studyID %in% x & total_db_path$visit %in% "0", "hospcode"]
})
db_path = read.csv("/Users/joycewang/Desktop/Mody_NH_collections/Pathways/Micro data_11-19-15.csv", sep = ",", quote = "")
db_path = db_path[!is.na(db_path$studyID), ]
total_db_path = read.csv("/Users/joycewang/Desktop/Mody_NH_collections/Pathways/Pathways Phase 2/Final Data files/Pathways_both phases final dataset.csv", header = T)
path_baseline = path_baseline[!path_baseline$studyID %in% "5009",]
path_baseline = path_baseline[path_baseline$studyID %in% db_path$studyID,]
path_baseline$hospcode = sapply(as.character(path_baseline$studyID), FUN = function(x){
total_db_path[total_db_path$studyID %in% x & total_db_path$visit %in% "0", "hospcode"]
})
facils_gt10 = names(which(table(path_baseline$hospcode[!path_baseline$hospcode %in% 31]) >= 10))
facils_gt10
path_facils = as.character(1:6)
path_facils
hospitals_gt10 = as.character(ac(1, 2, 8, 9, 10, 16, 19, 20, 25, 26, 29))
hospitals_gt10 = as.character(c(1, 2, 8, 9, 10, 16, 19, 20, 25, 26, 29))
hospitals_gt10
hospitals_gt10 == facils_gt10
all_pt_temp = path_baseline[path_baseline$hospcode %in% facils_gt10,]
all_pt_temp
all_pt_mat = matrix(0, nrow = length(path_facils) + length(facils_gt10),
ncol = length(path_facils) + length(facils_gt10),
dimnames = list(c(paste0("NF ", path_facils), paste0("Hospital ", facils_gt10)),
c(paste0("NF ", path_facils), paste0("Hospital ", facils_gt10))))
all_pt_mat
for (f in 1:length(path_facils)){
nf = paste0("NF ", f)
all_pt_mat[paste0("Hospital ", names(table(all_pt_temp[all_pt_temp$facilID %in% f, "hospcode"]))), nf] = table(all_pt_temp[all_pt_temp$facilID %in% f, "hospcode"])
}
all_pt_mat
test_mat = all_pt_mat
test_mat[grep("Hospital", rownames(test_mat)), 1:6]
as.vector(test_mat[grep("Hospital", rownames(test_mat)), 1:6])
paste(as.vector(test_mat[grep("Hospital", rownames(test_mat)), 1:6]), sep = ",")
paste(as.vector(test_mat[grep("Hospital", rownames(test_mat)), 1:6]), collapse = ",")
paste(as.vector(test_mat[grep("Hospital", rownames(test_mat)), 1:6]), collapse = ", ")
all_pt_mat[grep("Hospital", rownames(all_pt_mat)), grep("NF", colnames(all_pt_mat))] = c(3, 1, 0, 0, 0, 1, 2, 73, 21, 0, 9, 2, 4, 17, 0, 17, 0, 27, 0, 0, 0, 0, 2, 6, 2, 21, 39, 11, 10, 6, 4, 24, 3, 6, 4, 1, 2, 5, 5, 8, 8, 10, 65, 3, 0, 0, 23, 0, 16, 1, 1, 0, 0, 1, 0, 0, 4, 12, 0, 24, 0, 13, 0, 0, 0, 0)
all_pt_mat
all_pt_mat == test_mat
all_pt_mat != test_mat
sum(all_pt_mat != test_mat)
all_pt_mat[all_pt_mat <= 5] = 0
hospital_facility_graph = graph.adjacency(all_pt_mat, mode = "directed", diag = FALSE, weighted = TRUE)
library(igraph)
hospital_facility_graph = graph.adjacency(all_pt_mat, mode = "directed", diag = FALSE, weighted = TRUE)
E(hospital_facility_graph)$width = E(hospital_facility_graph)$weight * (10/max(E(hospital_facility_graph)$weight))
V(hospital_facility_graph)$color = ifelse(unlist(sapply(V(hospital_facility_graph)$name, FUN = function(x){if(length(grep("NF",x)) > 0) {1} else {0}})) == 1, "lightblue", "pink")
V(hospital_facility_graph)$shape = ifelse(unlist(sapply(V(hospital_facility_graph)$name, FUN = function(x){if(length(grep("NF",x)) > 0) {1} else {0}})) == 1, "square", "circle")
V(hospital_facility_graph)$name = gsub(" ", "\n", V(hospital_facility_graph)$name)
coord = as.matrix(c(349,496,365,121, 186,374, 536, 373, 165, 127, 548, 125, 637, 425.1711027, 84, 372, 367, 0, 93, 469), ncol = 2)
coord
coord = as.matrix(c(349,496,365,121, 186,374, 536, 373, 165, 127, 548, 125, 637, 425.1711027, 84, 372, 367, 0, 93, 469), nrow = 17, ncol = 2)
coord
length(c(349,496,365,121, 186,374, 536, 373, 165, 127, 548, 125, 637, 425.1711027, 84, 372, 367, 0, 93, 469))
coord = as.matrix(c(349,496,365,121, 186,374, 536, 373, 165, 127, 548, 125, 637, 425.1711027, 84, 372, 367, 0, 93, 469, 238,244,94, 281, 477, 252, 221, 461, 500, 460, 365, 350, 348,592), nrow = 17, ncol = 2)
coord
coord = matrix(c(349,496,365,121, 186,374, 536, 373, 165, 127, 548, 125, 637, 425.1711027, 84, 372, 367, 0, 93, 469, 238,244,94, 281, 477, 252, 221, 461, 500, 460, 365, 350, 348,592), nrow = 17, ncol = 2)
coord
par(mar = c(2, 2, 2, 2))
plot.igraph(hospital_facility_graph,
vertex.label.font = 2,
vertex.label.color = "black",
vertex.frame.color = NA,
edge.label = E(hospital_facility_graph)$weight,
edge.width = log10(E(hospital_facility_graph)$weight),
edge.label.cex = 0.75,
edge.label.color = "red",
edge.label.font = 2,
edge.label.family="Helvetica",
vertex.label.family = "Helvetica",
vertex.label.font = 2,
vertex.label.cex = 0.75,
edge.arrow.size = 0.75,
layout = coord)
coord = as.matrix(read.csv("../Drafts/Figures/2019-07-08_curated_transfer_coord.csv"))
coord = /Users/joycewang/Desktop/Snitkin_lab/Manuscripts/CDC_Year1_Patient_transfer/Drafts/Figures/2019-07-08_curated_transfer_coord.csv
coord = as.matrix(read.csv("/Users/joycewang/Desktop/Snitkin_lab/Manuscripts/CDC_Year1_Patient_transfer/Drafts/Figures/2019-07-08_curated_transfer_coord.csv"))
par(mar = c(2, 2, 2, 2))
plot.igraph(hospital_facility_graph,
vertex.label.font = 2,
vertex.label.color = "black",
vertex.frame.color = NA,
edge.label = E(hospital_facility_graph)$weight,
edge.width = log10(E(hospital_facility_graph)$weight),
edge.label.cex = 0.75,
edge.label.color = "red",
edge.label.font = 2,
edge.label.family="Helvetica",
vertex.label.family = "Helvetica",
vertex.label.font = 2,
vertex.label.cex = 0.75,
edge.arrow.size = 0.75,
layout = coord)
text(-1, 1, pos = 2, labels = expression(bold("A")), cex = 1.5, xpd = TRUE)
real_coord = as.matrix(read.csv("/Users/joycewang/Desktop/Snitkin_lab/Manuscripts/CDC_Year1_Patient_transfer/Drafts/Figures/2019-07-08_curated_transfer_coord.csv"))
real_coord
real_coord == coord
par(mar = c(2, 2, 2, 2))
plot.igraph(hospital_facility_graph,
vertex.label.font = 2,
vertex.label.color = "black",
vertex.frame.color = NA,
edge.label = E(hospital_facility_graph)$weight,
edge.width = log10(E(hospital_facility_graph)$weight),
edge.label.cex = 0.75,
edge.label.color = "red",
edge.label.font = 2,
edge.label.family="Helvetica",
vertex.label.family = "Helvetica",
vertex.label.font = 2,
vertex.label.cex = 0.75,
edge.arrow.size = 0.75,
layout = coord)
text(-1, 1, pos = 2, labels = expression(bold("A")), cex = 1.5, xpd = TRUE)
coord = matrix(c(349,496,365,121, 186,374, 536, 373, 165, 127, 548, 125, 637, 425, 84, 372, 367, 0, 93, 469, 238,244,94, 281, 477, 252, 221, 461, 500, 460, 365, 350, 348,592), nrow = 17, ncol = 2)
par(mar = c(2, 2, 2, 2))
plot.igraph(hospital_facility_graph,
vertex.label.font = 2,
vertex.label.color = "black",
vertex.frame.color = NA,
edge.label = E(hospital_facility_graph)$weight,
edge.width = log10(E(hospital_facility_graph)$weight),
edge.label.cex = 0.75,
edge.label.color = "red",
edge.label.font = 2,
edge.label.family="Helvetica",
vertex.label.family = "Helvetica",
vertex.label.font = 2,
vertex.label.cex = 0.75,
edge.arrow.size = 0.75,
layout = coord)
text(-1, 1, pos = 2, labels = expression(bold("A")), cex = 1.5, xpd = TRUE)
coord = matrix(c(349,496,365,121, 186,374, 536, 373, 165, 127, 548, 125, 637, 425, 84, 372, 367, 0, 93, 469, 238,244,94, 281, 477, 252, 221, 461, 500, 460, 365, 350, 348,592), nrow = 17, ncol = 2)
par(mar = c(2, 2, 2, 2))
plot.igraph(hospital_facility_graph,
vertex.label.font = 2,
vertex.label.color = "black",
vertex.frame.color = NA,
edge.label = E(hospital_facility_graph)$weight,
edge.width = log10(E(hospital_facility_graph)$weight),
edge.label.cex = 0.75,
edge.label.color = "red",
edge.label.font = 2,
edge.label.family="Helvetica",
vertex.label.family = "Helvetica",
vertex.label.font = 2,
vertex.label.cex = 0.75,
edge.arrow.size = 0.75,
layout = coord)
text(-1, 1, pos = 2, labels = expression(bold("A")), cex = 1.5, xpd = TRUE)
coord = matrix(c(349,496,365,121, 186,374, 536, 373, 165, 127, 548, 125, 637, 425, 84, 372, 367, 0, 93, 469, 238,244,94, 281, 477, 252, 221, 461, 500, 460, 365, 350, 348,592), nrow = 17, ncol = 2)
par(mar = c(2, 2, 2, 2))
plot.igraph(hospital_facility_graph,
vertex.label.font = 2,
vertex.label.color = "black",
vertex.frame.color = NA,
edge.label = E(hospital_facility_graph)$weight,
edge.width = log10(E(hospital_facility_graph)$weight),
edge.label.cex = 0.75,
edge.label.color = "red",
edge.label.font = 2,
edge.label.family="Helvetica",
vertex.label.family = "Helvetica",
vertex.label.font = 2,
vertex.label.cex = 0.75,
edge.arrow.size = 0.75,
layout = coord)
text(-1, 1, pos = 2, labels = expression(bold("A")), cex = 1.5, xpd = TRUE)
coord = matrix(c(349,496,365,121, 186,374, 536, 373, 165, 127, 548, 125, 637, 425, 84, 372, 367, 0, 93, 469, 238,244,94, 281, 477, 252, 221, 461, 500, 460, 365, 350, 348,592), nrow = 17, ncol = 2)
par(mar = c(2, 2, 2, 2))
plot.igraph(hospital_facility_graph,
vertex.label.font = 2,
vertex.label.color = "black",
vertex.frame.color = NA,
edge.label = E(hospital_facility_graph)$weight,
edge.width = log10(E(hospital_facility_graph)$weight),
edge.label.cex = 0.75,
edge.label.color = "red",
edge.label.font = 2,
edge.label.family="Helvetica",
vertex.label.family = "Helvetica",
vertex.label.font = 2,
vertex.label.cex = 0.75,
edge.arrow.size = 0.75,
layout = coord)
text(-1, 1, pos = 2, labels = expression(bold("A")), cex = 1.5, xpd = TRUE)
real_coord
coord
real_coord
str(real_coord)
str(coord)
coord = matrix(as.numeric(c(349,496,365,121, 186,374, 536, 373, 165, 127, 548, 125, 637, 425, 84, 372, 367, 0, 93, 469, 238,244,94, 281, 477, 252, 221, 461, 500, 460, 365, 350, 348,592)), nrow = 17, ncol = 2, dimnames = list(c("V1", "V2"), NULL))
coord = matrix(as.numeric(c(349,496,365,121, 186,374, 536, 373, 165, 127, 548, 125, 637, 425, 84, 372, 367, 0, 93, 469, 238,244,94, 281, 477, 252, 221, 461, 500, 460, 365, 350, 348,592)), nrow = 17, ncol = 2, dimnames = list(NULL, c("V1", "V2")))
coord
coord = matrix(as.numeric(c(349,496,365,121, 186,374, 536, 373, 165, 127, 548, 125, 637, 425, 84, 372, 367, 0, 93, 469, 238,244,94, 281, 477, 252, 221, 461, 500, 460, 365, 350, 348,592)), nrow = 17, ncol = 2, dimnames = list(NULL, c("V1", "V2")))
par(mar = c(2, 2, 2, 2))
plot.igraph(hospital_facility_graph,
vertex.label.font = 2,
vertex.label.color = "black",
vertex.frame.color = NA,
edge.label = E(hospital_facility_graph)$weight,
edge.width = log10(E(hospital_facility_graph)$weight),
edge.label.cex = 0.75,
edge.label.color = "red",
edge.label.font = 2,
edge.label.family="Helvetica",
vertex.label.family = "Helvetica",
vertex.label.font = 2,
vertex.label.cex = 0.75,
edge.arrow.size = 0.75,
layout = coord)
text(-1, 1, pos = 2, labels = expression(bold("A")), cex = 1.5, xpd = TRUE)
coord
head(coord)
head(real_coord)
coord = matrix(as.numeric(c(349,496,365,121, 186,374, 536, 373, 165, 127, 548, 125, 637, 425, 84, 372, 367, 0, 93, 469, 238,244,94, 281, 477, 252, 221, 461, 500, 460, 365, 350, 348,592)), ncol = 2, byrow = T)
par(mar = c(2, 2, 2, 2))
plot.igraph(hospital_facility_graph,
vertex.label.font = 2,
vertex.label.color = "black",
vertex.frame.color = NA,
edge.label = E(hospital_facility_graph)$weight,
edge.width = log10(E(hospital_facility_graph)$weight),
edge.label.cex = 0.75,
edge.label.color = "red",
edge.label.font = 2,
edge.label.family="Helvetica",
vertex.label.family = "Helvetica",
vertex.label.font = 2,
vertex.label.cex = 0.75,
edge.arrow.size = 0.75,
layout = coord)
text(-1, 1, pos = 2, labels = expression(bold("A")), cex = 1.5, xpd = TRUE)
path_fac_address = readRDS("/Users/joycewang/Desktop/Snitkin_lab/CDC_grant/Year1/Analysis/R_scripts/2018-07-13_patient_transfer/2018-08-07_path_fac_address.RDS")
path_fac_address
path_fac_address[,1]
path_fac_loc = V_long_lat(path_fac_address)
MI_NH_data = read.csv("/Users/joycewang/Desktop/Mody_NH_collections/Pathways/MI_NH_CMS_IDs.csv")
MI_NH_data
MI_NH_data$address
MI_NH_data$full_address = apply(MI_NH_data, 1, FUN = function(x){paste(as.character(x["address"]), ",", as.character(x["city"]), ", MI", sep = "")})
path_facs = structure(MI_NH_data[MI_NH_data$facilID %in% path_facils, "full_address"], names = path_facils)
api_key = 'AIzaSyCCQFozYYiWq-ImcSIKtxJoI1R4Tn4ftIU';
path_fac_address = sapply(path_facs , FUN = function(x){print(x);
google_geocode(address = x, key = api_key)})
library(geosphere)
path_fac_address = sapply(path_facs , FUN = function(x){print(x);
google_geocode(address = x, key = api_key)})
library(googleway)
install.packages("googleway")
library(googleway)
path_fac_address = sapply(path_facs , FUN = function(x){print(x);
google_geocode(address = x, key = api_key)})
path_fac_address
api_key = "AIzaSyC__qTy0GkbATHQtegvZj4_70oAVALIREI"
path_fac_address = sapply(path_facs , FUN = function(x){print(x);
google_geocode(address = x, key = api_key)})
path_fac_address
api_key = "AIzaSyCIXT8_FDCFJOqESiVaYWVHOQq7DO09c5k"
google_geocode(address = x, key = api_key)})
path_fac_address = sapply(path_facs , FUN = function(x){print(x);
google_geocode(address = x, key = api_key)})
path_fac_address
api_key = "AIzaSyCIXT8_FDCFJOqESiVaYWVHOQq7DO09c5k"
api_key
path_fac_address = sapply(path_facs , FUN = function(x){print(x);
google_geocode(address = x, key = api_key)})
path_fac_address
api_key = "AIzaSyCIXT8_FDCFJOqESiVaYWVHOQq7DO09c5k"
path_fac_address = sapply(path_facs , FUN = function(x){print(x);
google_geocode(address = x, key = api_key)})
path_fac_address
api_key = "AIzaSyAVCcxhALyZQ1qWZSj0T00TBksnhv57Ug8"
path_fac_address = sapply(path_facs , FUN = function(x){print(x);
google_geocode(address = x, key = api_key)})
path_fac_address
path_fac_address = sapply(path_facs , FUN = function(x){print(x);
google_geocode(address = x, key = api_key)})
path_fac_address
api_key = "AIzaSyBN_DmU_x40hsxsJ-jrrY6XskxrduMQ31A"
path_fac_address = sapply(path_facs , FUN = function(x){print(x);
google_geocode(address = x, key = api_key)})
path_fac_address
path_fac_address
api_key = "AIzaSyBN_DmU_x40hsxsJ-jrrY6XskxrduMQ31A"
path_fac_address = sapply(path_facs , FUN = function(x){print(x);
google_geocode(address = x, key = api_key)})
path_fac_address
api_key = "AIzaSyAjYn572HsNWsMrNgDjU9WUdgvbGkqwpV8"
path_fac_address = sapply(path_facs , FUN = function(x){print(x);
google_geocode(address = x, key = api_key)})
path_fac_address
api_key = "AIzaSyAjYn572HsNWsMrNgDjU9WUdgvbGkqwpV8"
path_fac_address = sapply(path_facs , FUN = function(x){print(x);
google_geocode(address = x, key = api_key)})
path_fac_address = sapply(path_facs , FUN = function(x){print(x);
google_geocode(address = x, key = api_key)}); path_fac_address
api_key = "AIzaSyAjYn572HsNWsMrNgDjU9WUdgvbGkqwpV8"
path_fac_address = sapply(path_facs , FUN = function(x){print(x);
google_geocode(address = x, key = api_key)}); path_fac_address
api_key = "AIzaSyAZKpHGukxPnxqR9fPMc9ATrdMBbFnC_KE"
path_fac_address = sapply(path_facs , FUN = function(x){print(x);
google_geocode(address = x, key = api_key)}); path_fac_address
path_fac_address
library(googleway)
UM_goecode = google_geocode(address = UM_address, key = api_key)
UM_address = "1500 E Medical Center Dr, Ann Arbor, MI 48109, United States"
UM_goecode = google_geocode(address = UM_address, key = api_key)
rm(UM_goecode)
UM_geocode = google_geocode(address = UM_address, key = api_key)
UM_geocode
api_key = "AIzaSyAjYn572HsNWsMrNgDjU9WUdgvbGkqwpV8"
UM_geocode = google_geocode(address = UM_address, key = api_key)
UM_geocode
api_key = "AIzaSyAZKpHGukxPnxqR9fPMc9ATrdMBbFnC_KE"
UM_geocode = google_geocode(address = UM_address, key = api_key)
UM_geocode
api_key = "AIzaSyDYlJ1Omt1Cs1acQCdom2EqCaI9ByPHS3E"
UM_geocode = google_geocode(address = UM_address, key = api_key)
UM_geocode
api_key = "AIzaSyBdMWuT7RvOxZp_3rU5f-T0BVHuby9AIqI"
UM_geocode = google_geocode(address = UM_address, key = api_key)
UM_geocode
api_key = "AIzaSyBdMWuT7RvOxZp_3rU5f-T0BVHuby9AIqI"
UM_geocode = google_geocode(address = UM_address, key = api_key)
UM_geocode
api_key = "AIzaSyBdMWuT7RvOxZp_3rU5f-T0BVHuby9AIqI"
UM_geocode = google_geocode(address = UM_address, key = api_key)
UM_geocode
UM_geocode = google_geocode(address = UM_address, key = api_key)
UM_geocode
saveRDS(object = UM_geocode, "UM_geocode.RDS")
UM_geocode = readRDS("UM_geocode.RDS")
UM_geocode
V_long_lat = function(address){
temp_loc = apply(address, 2, FUN = function(x){ x[['results']][,"geometry"][grep("location", colnames(x$results[,"geometry"]))][1][1,]} )
loc_df = do.call(rbind, temp_loc)
loc_df = loc_df[,2:1]
return(loc_df)
}
V_long_lat(UM_geocode)
path_Fac_address = readRDS"/Users/joycewang/Desktop/Snitkin_lab/CDC_grant/Year1/Analysis/R_scripts/2018-07-13_patient_transfer/2018-08-07_path_fac_address.RDS"
path_fac_address = readRDS("/Users/joycewang/Desktop/Snitkin_lab/CDC_grant/Year1/Analysis/R_scripts/2018-07-13_patient_transfer/2018-08-07_path_fac_address.RDS")
path_fac_address
as.matrix(UM_address)
as.matrix(UM_geocode)
UM_geocode = as.matrix(readRDS("UM_geocode.RDS"))
UM_geocode = as.matrix(readRDS("UM_geocode.RDS"))
V_long_lat(UM_geocode)
getwd()
source("../../codes/lib/geocode_functions")
source("../../codes/lib/geocode_functions.R")
UM_geocode = as.matrix(readRDS("UM_geocode.RDS"))
V_long_lat(UM_geocode)
path_fac_address
install.packages("strwrap")
path_facs
example_hospitals = c(UM_address, Rush_address, Mayo_address, Cleveland_address)
UM_address = "1500 E Medical Center Dr, Ann Arbor, MI 48109, United States"
Rush_address = "1620 W Harrison St, Chicago, IL 60612, United States"
Mayo_address = "200 First St. SW Rochester, MN 55905, United States"
Cleveland_address = "9501 Euclid Ave, Cleveland, OH 44195, United States"
example_hospitals = c(UM_address, Rush_address, Mayo_address, Cleveland_address)
api_key
hospital_geocode = sapply(example_hospitals, FUN = function(x){print(x)
google_geocode(address = x, key = api_key)
})
hospital_geocode
saveRDS(object = hospital_geocode, file = "/Users/joycewang/Desktop/Snitkin_lab/git_projects/cid_genomics_2020/data/hospital_geocode.RDS")
V_long_lat(hospital_geocode)
example_hospitals = structure(c(UM_address, Rush_address, Mayo_address, Cleveland_address), names = c("Michigan", "Rush", "Mayo", "Cleveland"))
hospital_geocode = sapply(example_hospitals, FUN = function(x){print(x)
google_geocode(address = x, key = api_key)
})
V_long_lat(hospital_geocode)
hospital_loc = V_long_lat(hospital_geocode)
hospital_dist = 0.001*outer(1:nrow(hospital_loc), 1:nrow(hospital_loc),
Vectorize(FUN = function(x,y){
distm(c(hospital_loc[x,2], hospital_loc[x,1]),
c(hospital_loc[y,2], hospital_loc[y,1]), fun = distHaversine)})) #meters -> km
hospital_loc = V_long_lat(hospital_geocode)
hospital_dist = 0.001*outer(1:nrow(hospital_loc), 1:nrow(hospital_loc),
Vectorize(FUN = function(x,y){
distm(c(hospital_loc[x,2], hospital_loc[x,1]),
c(hospital_loc[y,2], hospital_loc[y,1]), fun = distHaversine)})) #meters -> km
hospital_loc
0.001*outer(1:nrow(hospital_loc), 1:nrow(hospital_loc),
Vectorize(FUN = function(x,y){print(c(x, y))
distm(c(hospital_loc[x,2], hospital_loc[x,1]),
c(hospital_loc[y,2], hospital_loc[y,1]), fun = distHaversine)})) #meters -> km
x = 3
y = 1
hospital_loc[x,2]
distm(c(hospital_loc[x,2], hospital_loc[x,1]),
c(hospital_loc[y,2], hospital_loc[y,1]), fun = distHaversine)
hospital_loc
Mayo_address
?distm
